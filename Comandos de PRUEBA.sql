--PROCEDIMIENTO 1 (INSERTAR EMPRESA)
SET SERVEROUTPUT ON;
CREATE OR REPLACE PROCEDURE SP_INSERTAR_EMPRESA
(--Parametros para llenar la tabla EMPRESA
ID_EMPRESA_PARAMETRO IN EMPRESA.ID_EMPRESA%TYPE,
NOMBRE_EMPRESA_PARAMETRO IN EMPRESA.NOMBRE%TYPE,
DESCRIPCION_PARAMETRO IN EMPRESA.DESCRIPCION%TYPE,
ID_RUBRO_EMPRESA_PARAMETRO IN RUBRO_EMPRESA.ID_RUBRO_EMPRESA%TYPE,
RUT_EMPRESA_PARAMETRO IN EMPRESA.RUT_EMPRESA%TYPE,
ESTADO_PARAMETRO IN EMPRESA.ESTADO%TYPE,
LOGO_PARAMETRO IN EMPRESA.LOGO%TYPE,
CORREO_PARAMETRO IN EMPRESA.CORREO%TYPE,
RAZON_SOCIAL_PARAMETRO IN EMPRESA.RAZON_SOCIAL%TYPE,
DIRECCION_PARAMETRO IN EMPRESA.DIRECCION%TYPE,
--Parametros para llenar la tabla CONTRATO--
ID_CONTRATO_EMPRESA_PARAMETRO IN CONTRATO_EMPRESA.ID_CONTRATO%TYPE,
DESCRIPCION_CONTRATO_PARAMETRO IN CONTRATO_EMPRESA.DESCRIPCION%TYPE,
FECHA_INICIO_PARAMETRO IN CONTRATO_EMPRESA.FECHA_INICIO%TYPE,
ESTADO_CONTRATO_PARAMETRO IN CONTRATO_EMPRESA.ESTADO_CONTRATO%TYPE,
FECHA_TERMINO_PARAMETRO IN CONTRATO_EMPRESA.FECHA_TERMINO%TYPE)
IS
ID_RESCATADO EMPRESA.ID_EMPRESA%TYPE;
BEGIN
  INSERT INTO EMPRESA VALUES (ID_EMPRESA_PARAMETRO,NOMBRE_EMPRESA_PARAMETRO,DESCRIPCION_PARAMETRO,ID_RUBRO_EMPRESA_PARAMETRO,
  RUT_EMPRESA_PARAMETRO,ESTADO_PARAMETRO,LOGO_PARAMETRO,CORREO_PARAMETRO,RAZON_SOCIAL_PARAMETRO,DIRECCION_PARAMETRO);
  
  SELECT ID_EMPRESA 
  INTO ID_RESCATADO 
  FROM EMPRESA 
  WHERE RUT_EMPRESA = RUT_EMPRESA_PARAMETRO;
  
  INSERT INTO CONTRATO_EMPRESA VALUES (ID_CONTRATO_EMPRESA_PARAMETRO,DESCRIPCION_CONTRATO_PARAMETRO,FECHA_INICIO_PARAMETRO,ID_RESCATADO,ESTADO_CONTRATO_PARAMETRO,FECHA_TERMINO_PARAMETRO);
END SP_INSERTAR_EMPRESA;

--LLamando al procedimiento.
exec SP_INSERTAR_EMPRESA(SECUENCIA_ID_EMPRESA.NEXTVAL,'PRUEBA STORE PROCEDURE','DESCRIPCION PRUEBA',2,705686421,1,'\IMG\LOGO4','PRUEBA@PRUEBA.CL','PRUEBA_RAZON_SOCIAL','EJERCITO 215',SECUENCIA_ID_CONTRATO_EMPRESA.NEXTVAL,'DESCRIPCION CONTRATO PRUEBA',SYSDATE,1,SYSDATE);

--Validar Resultados
SELECT * FROM EMPRESA;
SELECT * FROM CONTRATO_EMPRESA;

--Creo la secuencia para los campos autoincrementables.
CREATE SEQUENCE SECUENCIA_ID_EMPRESA
START WITH 4
INCREMENT BY 1;

CREATE SEQUENCE SECUENCIA_ID_CONTRATO_EMPRESA
START WITH 4
INCREMENT BY 1;






--PROCEDIMIENTO 2 (ACTUALIZAR EMPRESA)
SET SERVEROUTPUT ON;
CREATE OR REPLACE PROCEDURE SP_ACTUALIZAR_EMPRESA
(NOMBRE_EMPRESA_PARAMETRO IN EMPRESA.NOMBRE%TYPE,
DESCRIPCION_PARAMETRO IN EMPRESA.DESCRIPCION%TYPE,
ID_RUBRO_EMPRESA_PARAMETRO IN EMPRESA.ID_RUBRO_EMPRESA%TYPE,
RUT_EMPRESA_PARAMETRO_NUEVO IN EMPRESA.RUT_EMPRESA%TYPE,
ESTADO_PARAMETRO IN EMPRESA.ESTADO%TYPE,
LOGO_PARAMETRO IN EMPRESA.LOGO%TYPE,
CORREO_PARAMETRO IN EMPRESA.CORREO%TYPE,
RAZON_SOCIAL_PARAMETRO IN EMPRESA.RAZON_SOCIAL%TYPE,
DIRECCION_PARAMETRO IN EMPRESA.DIRECCION%TYPE,
ID_EMPRESA_PARAMETRO IN EMPRESA.ID_EMPRESA%TYPE)
IS
BEGIN
  UPDATE EMPRESA
  SET NOMBRE = NOMBRE_EMPRESA_PARAMETRO,
  DESCRIPCION = DESCRIPCION_PARAMETRO,
  ID_RUBRO_EMPRESA = ID_RUBRO_EMPRESA_PARAMETRO,
  RUT_EMPRESA = RUT_EMPRESA_PARAMETRO_NUEVO,
  ESTADO = ESTADO_PARAMETRO,
  LOGO = LOGO_PARAMETRO,
  CORREO = CORREO_PARAMETRO,
  RAZON_SOCIAL = RAZON_SOCIAL_PARAMETRO,
  DIRECCION = DIRECCION_PARAMETRO
  WHERE ID_EMPRESA = ID_EMPRESA_PARAMETRO;
END SP_ACTUALIZAR_EMPRESA;

--LLamando al procedimiento.
exec SP_ACTUALIZAR_EMPRESA('SERBIMA','SERBIMA DESCRIPCION',1,16123456,0,'\LOGO\PRUEBA01','CORREO@PRUEBA.CL','SERBIMA S.A','PRUEBA 123',4);

--Validar Resultados
SELECT * FROM EMPRESA;





--PROCEDIMIENTO 3 (ELIMINAR EMPRESA (ELIMINACIÓN FISICA))
SET SERVEROUTPUT ON;
CREATE OR REPLACE PROCEDURE SP_ELIMINAR_EMPRESA
(ID_EMPRESA_PARAMETRO IN EMPRESA.ID_EMPRESA%TYPE) 
IS
BEGIN
  DELETE FROM EMPRESA WHERE ID_EMPRESA = ID_EMPRESA_PARAMETRO ;
END SP_ELIMINAR_EMPRESA;

--LLamando al procedimiento.
exec SP_ELIMINAR_EMPRESA(4);

--Validar Resultados
SELECT * FROM EMPRESA;



--PROCEDIMIENTO 3.1 (ELIMINAR EMPRESA (ELIMINACIÓN LOGICA))
SET SERVEROUTPUT ON;
CREATE OR REPLACE PROCEDURE SP_ELIMINAR_EMPRESA_LOGICA
(ID_EMPRESA_PARAMETRO IN EMPRESA.ID_EMPRESA%TYPE) 
IS
BEGIN
  UPDATE EMPRESA
  SET ESTADO = 0
  WHERE ID_EMPRESA = ID_EMPRESA_PARAMETRO;
END SP_ELIMINAR_EMPRESA_LOGICA;

--LLamando al procedimiento.
exec SP_ELIMINAR_EMPRESA_LOGICA(4);

--Validar Resultados
SELECT * FROM EMPRESA;







--PROCEDIMIENTO 4 (INSERTAR PROFESIONAL)
SET SERVEROUTPUT ON;
CREATE OR REPLACE PROCEDURE SP_INSERTAR_PROFESIONAL
(--Parametros para llenar la tabla PROFESIONAL
ID_PROFESIONAL_PARAMETRO IN PROFESIONAL.ID_PROFESIONAL%TYPE,
PRIMER_NOMBRE_PARAMETRO IN PROFESIONAL.PRIMER_NOMBRE%TYPE,
APELLIDO_PATERNO_PARAMETRO IN PROFESIONAL.APELLIDO_PATERNO%TYPE,
APELLIDO_MATERNO_PARAMETRO IN PROFESIONAL.APELLIDO_MATERNO%TYPE,
FECHA_NACIMIENTO_PARAMETRO IN PROFESIONAL.FECHA_NACIMIENTO%TYPE,
ESTADO_PARAMETRO IN PROFESIONAL.ESTADO%TYPE,
RUT_PROFESIONAL_PARAMETRO IN PROFESIONAL.RUT_PROFESIONAL%TYPE,
SEGUNDO_NOMBRE_PARAMETRO IN PROFESIONAL.SEGUNDO_NOMBRE%TYPE,
CORREO_ELECTRONICO_PARAMETRO IN PROFESIONAL.CORREO_ELECTRONICO%TYPE,
DIRECCION_PARAMETRO IN PROFESIONAL.DIRECCION%TYPE,
TELEFONO_PARAMETRO IN PROFESIONAL.TELEFONO%TYPE,
--Parametros para llenar la tabla CONTRATO_PROFESIONAL
ID_CONTRATO_PARAMETRO IN CONTRATO_PROFESIONAL.ID_CONTRATO%TYPE,
FECHA_INICIO_PARAMETRO IN CONTRATO_PROFESIONAL.FECHA_INICIO%TYPE,
FECHA_TERMINO_PARAMETRO IN CONTRATO_PROFESIONAL.FECHA_TERMINO%TYPE,
ESTADO_PROF_PARAMETRO IN CONTRATO_PROFESIONAL.ESTADO%TYPE) 
IS
ID_RESCATADO PROFESIONAL.ID_PROFESIONAL%TYPE;
BEGIN
  INSERT INTO PROFESIONAL VALUES (ID_PROFESIONAL_PARAMETRO,PRIMER_NOMBRE_PARAMETRO,APELLIDO_PATERNO_PARAMETRO,APELLIDO_MATERNO_PARAMETRO,FECHA_NACIMIENTO_PARAMETRO,
  ESTADO_PARAMETRO,RUT_PROFESIONAL_PARAMETRO,SEGUNDO_NOMBRE_PARAMETRO,CORREO_ELECTRONICO_PARAMETRO,DIRECCION_PARAMETRO,TELEFONO_PARAMETRO);
  
  SELECT ID_PROFESIONAL 
  INTO ID_RESCATADO 
  FROM PROFESIONAL 
  WHERE RUT_PROFESIONAL = RUT_PROFESIONAL_PARAMETRO;
  
  INSERT INTO CONTRATO_PROFESIONAL VALUES (ID_CONTRATO_PARAMETRO,FECHA_INICIO_PARAMETRO,FECHA_TERMINO_PARAMETRO,ESTADO_PROF_PARAMETRO,ID_RESCATADO); 
END SP_INSERTAR_PROFESIONAL;

--LLamando al procedimiento.
exec SP_INSERTAR_PROFESIONAL(SECUENCIA_ID_PROFESIONAL.NEXTVAL,'NOMBRE 1','APELLIDO 1','APELLIDO 2',SYSDATE,1,169199957,'NOMBRE 2','PRUEBA@PRUEBA.CL','DIRECCION_PRUEBA',12345678,SECUENCIA_ID_CONTRATO_PROF.NEXTVAL,SYSDATE,SYSDATE,1);

--Validar Resultados
SELECT * FROM PROFESIONAL;
SELECT * FROM CONTRATO_PROFESIONAL;

--Creo la secuencia para los campos autoincrementables.
CREATE SEQUENCE SECUENCIA_ID_PROFESIONAL
START WITH 4
INCREMENT BY 1;

CREATE SEQUENCE SECUENCIA_ID_CONTRATO_PROF
START WITH 4
INCREMENT BY 1;

DELETE FROM PROFESIONAL WHERE ID_PROFESIONAL = 4;  
DELETE FROM CONTRATO_PROFESIONAL WHERE ID_CONTRATO = 4;  






--PROCEDIMIENTO 5 (ACTUALIZAR PROFESIONAL)
SET SERVEROUTPUT ON;
CREATE OR REPLACE PROCEDURE SP_ACTUALIZAR_PROFESIONAL
(PRIMER_NOMBRE_PARAMETRO IN PROFESIONAL.PRIMER_NOMBRE%TYPE,
APELLIDO_PATERNO_PARAMETRO IN PROFESIONAL.APELLIDO_PATERNO%TYPE,
APELLIDO_MATERNO_PARAMETRO IN PROFESIONAL.APELLIDO_MATERNO%TYPE,
FECHA_NACIMIENTO_PARAMETRO IN PROFESIONAL.FECHA_NACIMIENTO%TYPE,
ESTADO_PARAMETRO IN PROFESIONAL.ESTADO%TYPE,
RUT_PROFESIONAL_PARAMETRO IN PROFESIONAL.RUT_PROFESIONAL%TYPE,
SEGUNDO_NOMBRE_PARAMETRO IN PROFESIONAL.SEGUNDO_NOMBRE%TYPE,
CORREO_ELECTRONICO_PARAMETRO IN PROFESIONAL.CORREO_ELECTRONICO%TYPE,
DIRECCION_PARAMETRO IN PROFESIONAL.DIRECCION%TYPE,
TELEFONO_PARAMETRO IN PROFESIONAL.TELEFONO%TYPE,
ID_PROFESIONAL_PARAMETRO IN PROFESIONAL.ID_PROFESIONAL%TYPE) 
IS
BEGIN
  UPDATE PROFESIONAL
  SET PRIMER_NOMBRE = PRIMER_NOMBRE_PARAMETRO,
  APELLIDO_PATERNO = APELLIDO_PATERNO_PARAMETRO,
  APELLIDO_MATERNO = APELLIDO_MATERNO_PARAMETRO,
  FECHA_NACIMIENTO = FECHA_NACIMIENTO_PARAMETRO,
  ESTADO = ESTADO_PARAMETRO,
  RUT_PROFESIONAL = RUT_PROFESIONAL_PARAMETRO,
  SEGUNDO_NOMBRE = SEGUNDO_NOMBRE_PARAMETRO,
  CORREO_ELECTRONICO = CORREO_ELECTRONICO_PARAMETRO,
  DIRECCION = DIRECCION_PARAMETRO,
  TELEFONO = TELEFONO_PARAMETRO
  WHERE ID_PROFESIONAL = ID_PROFESIONAL_PARAMETRO;
END SP_ACTUALIZAR_PROFESIONAL;

--LLamando al procedimiento.
exec SP_ACTUALIZAR_PROFESIONAL('SOL','PATERNO','MATERNO',SYSDATE,1,208463279,'LUNA','SOL@LUNA.CL','PERICO LOS PALOTES 123',958586705,4);

--Validar Resultados
SELECT * FROM PROFESIONAL;





--PROCEDIMIENTO 6 (ELIMINAR PROFESIONAL (ELIMINACIÓN FISICA))
SET SERVEROUTPUT ON;
CREATE OR REPLACE PROCEDURE SP_ELIMINAR_PROFESIONAL
(ID_PROFESIONAL_PARAMETRO IN PROFESIONAL.ID_PROFESIONAL%TYPE) 
IS
BEGIN
  DELETE FROM PROFESIONAL WHERE ID_PROFESIONAL = ID_PROFESIONAL_PARAMETRO ;
END SP_ELIMINAR_PROFESIONAL;

--LLamando al procedimiento.
exec SP_ELIMINAR_PROFESIONAL(4);

--Validar Resultados
SELECT * FROM PROFESIONAL;





--PROCEDIMIENTO 6.1 (ELIMINAR PROFESIONAL (ELIMINACIÓN LOGICA))
SET SERVEROUTPUT ON;
CREATE OR REPLACE PROCEDURE SP_ELIMINAR_PROFESIONAL_LOGICA
(ID_PROFESIONAL_PARAMETRO IN PROFESIONAL.ID_PROFESIONAL%TYPE) 
IS
BEGIN
  UPDATE PROFESIONAL
  SET ESTADO = 0
  WHERE ID_PROFESIONAL = ID_PROFESIONAL_PARAMETRO;
END SP_ELIMINAR_PROFESIONAL_LOGICA;

--LLamando al procedimiento.
exec SP_ELIMINAR_PROFESIONAL_LOGICA(4);

--Validar Resultados
SELECT * FROM PROFESIONAL;





--CONSULTAS PARA TRABAJAR TIPICAS
SELECT * FROM EMPRESA;
SELECT * FROM CONTRATO_EMPRESA;

INSERT INTO CONTRATO_PROFESIONAL VALUES (1,SYSDATE,SYSDATE,1,1);
INSERT INTO CONTRATO_PROFESIONAL VALUES (2,SYSDATE,SYSDATE,1,2);
INSERT INTO CONTRATO_PROFESIONAL VALUES (3,SYSDATE,SYSDATE,1,3);

UPDATE PROFESIONAL
SET TELEFONO = 12345678
WHERE ID_PROFESIONAL = 4;

DELETE FROM EMPRESA WHERE ID_EMPRESA = 777;  
DELETE FROM CONTRATO_EMPRESA WHERE ID_CONTRATO = 4;  

INSERT INTO CONTRATO VALUES(4,'PRUEBA',SYSDATE,4,1,SYSDATE);

ALTER TABLE CONTRATO_PROFESIONAL
ADD CONSTRAINT CONTRPROFESIONAL_PROFESIONAL
FOREIGN KEY (ID_PROFESIONAL)
REFERENCES PROFESIONAL (ID_PROFESIONAL);

ALTER TABLE EMPRESA
ADD UNIQUE (RUT_EMPRESA);






--CURSO PL-SQL UDEMY (Video 28)
SET SERVEROUTPUT ON;
BEGIN

DBMS_OUTPUT.PUT_LINE('Prueba de impresión de caracteres por pantalla');

END;

--Variables (Video 29)
SET SERVEROUTPUT ON;
DECLARE
    NOMBRE VARCHAR2(100);
    APELLIDO VARCHAR2(100);
BEGIN
    NOMBRE:='CARLOS';
    APELLIDO:='ORTIZ';
    DBMS_OUTPUT.PUT_LINE(NOMBRE || ' ' || APELLIDO );
END;


--Variables CONSTANTES Y NO NULAS (Video 30)
SET SERVEROUTPUT ON;
DECLARE
    NOMBRE CONSTANT VARCHAR2(100):= 'CARLOS';
    APELLIDO VARCHAR2(100) NOT NULL := 'ORTIZ' ;
BEGIN
    DBMS_OUTPUT.PUT_LINE(NOMBRE || ' ' || APELLIDO );
END;

--Video 32(VARIABLES BOOLEANAS)
SET SERVEROUTPUT ON;
DECLARE
    NOMBRE BOOLEAN;
BEGIN
    NOMBRE := TRUE;
    NOMBRE := FALSE;
    NOMBRE := NULL;
END;

--Video 33 (VARIABLES %TYPE) YA LAS OCUPO DE ANTES
SET SERVEROUTPUT ON;
DECLARE
    NOMBRE EMPLOYEES.SALARY%TYPE;
BEGIN
    NOMBRE := 100;
END;









